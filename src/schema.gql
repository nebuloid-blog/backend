type Query {
	# Users
	me: User

	# Courses
	course(id: ID!): Course
	indexCourses: [Course!]

	# Projects
	project(id: ID!): Project
	indexProjects: [Project!]
}

type Mutation {
	# Users
	createUser(
		email: String!
		username: String!
		password: String!
	): String

	signInUser(
		username: String!
		password: String!
	): String

	# Courses
	createCourse(
		name: String!
		description: String
		projects: [ID!]
	): ID!

	updateCourse(id: ID!): Boolean!
	deleteCourse(id: ID!): Boolean!

	# Projects
	createProject(
		name: String!
		description: String
		courses: [ID!]
	): ID!

	updateProject(id: ID!): Boolean!
	deleteProject(id: ID!): Boolean!
}

type User @entity (
	additionalFields: [{
		path: "password",
		type: "string",
	}]
) {
	id: ID! @id
	email: String! @column
	username: String! @column
}

type Course @entity {
	id: ID! @id
	name: String! @column
	description: String @column
	projects: [Project!] @link
}

type Project @entity {
	id: ID! @id
	name: String! @column
	description: String @column
	courses: [Course!] @link
}
